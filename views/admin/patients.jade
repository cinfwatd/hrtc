extends ../layouts/default

block settings
block sidebar
block doctors
block topbar
  include ../partials/topbar
append pagespecificstyles
  link(rel='stylesheet', href='/assets/css/jquery-ui.css')
  //- link(rel='stylesheet', href='/assets/css/datepicker.css')
  link(rel='stylesheet', href='/assets/css/ui.jqgrid.css')
append scripts
  script(src='/assets/js/date-time/bootstrap-datepicker.js')
  script(src='/assets/js/jqGrid/jquery.jqGrid.src.js')
  script(src='/assets/js/jqGrid/i18n/grid.locale-en.js')
  script(type='text/javascript').
    
    jQuery(function($) {
      var grid_selector = "#grid-table";
      //- var pager_selector = "#grid-pager";
      
      //resize to fit page size
      $(window).on('resize.jqGrid', function () {
        $(grid_selector).jqGrid( 'setGridWidth', $(".page-content").width() );
        })
      //resize on sidebar collapse/expand
      var parent_column = $(grid_selector).closest('[class*="col-"]');
      $(document).on('settings.ace.jqGrid' , function(ev, event_name, collapsed) {
        if( event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed' ) {
          //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
          setTimeout(function() {
            $(grid_selector).jqGrid( 'setGridWidth', parent_column.width() );
          }, 0);
        }
      });
    
      jQuery(grid_selector).jqGrid({
        //direction: "rtl",

        //- data: grid_data,
        url: "/admin/patients/fetch",
        mtype: "GET",
        datatype: "JSON",
        jsonReader: {
          page: "page",
          total: "total",
          records: "records",
          id: "_id",
          rows: "rows",
          
        },
        autowidth: true,
        height: 250,
        colNames:['First Name', 'Last Name', 'Email', 'Date Created', 'Status'],
        colModel:[
          {
            name:'name.first', index:'first', width: '90', 
            editable: true, sortable: false, 
            editrules: {required: true},
            searchoptions: {
              sopt: ['bw', 'bn', 'ew', 'en', 'cn', 'nc', 'eq', 'ne']
            }
          },
          {
            name:'name.last', index:'email', width: '90', 
            editable: true, sortable: false, 
            editrules: {required: true},
            searchoptions: {
              sopt: ['bw', 'bn', 'ew', 'en', 'cn', 'nc', 'eq', 'ne']
            }
          },
          {
            name:'email', index:'email', width: '90', 
            editable: true, sortable: false, 
            editrules: {required: true, email: true},
            searchoptions: {
              sopt: ['bw', 'bn', 'ew', 'en', 'cn', 'nc', 'eq', 'ne']
            }
          },
          {
            name:'dateCreated', index:'dateCreated', width:'110',
            editable: false, sortable: true, formatter: 'date',
            formatoptions: {srcformat: 'ISO8601Long', newformat: 'Y/m/d h:i A'},
            searchoptions: {
              sopt: ['le', 'lt', 'gt', 'ge'],
              dataInit: function(elem) {
                $(elem).datepicker({
                  showButtonPanel: true,
                  //- format: 'yyyy/mm/dd',
                  autoclose: true
                })
              }
            }
          },
          {
            name:'active', index: 'active', width:'100',
            fixed: true, resize: false,
            editable: true, sortable: true,
            search: false, edittype:'checkbox',
            editoptions:{value:"true:false"},
            unformat: aceSwitch,
            formatter: statusFormatter
          },
          //- {name:'myac',index:'', width:80, fixed:true, sortable:false, resize:false,
          //-   formatter:'actions', 
          //-   formatoptions:{ 
          //-     keys:true,
          //-     //delbutton: false,//disable delete button
          //-     
          //-     delOptions:{recreateForm: true, beforeShowForm:beforeDeleteCallback},
          //-     //editformbutton:true, editOptions:{recreateForm: true, beforeShowForm:beforeEditCallback}
          //-   }
          //- }
        ], 
    
        viewrecords : true,
        rowNum:10,
        rowList:[10,20,30],
        pager : '#pager',
        toppager: true,
        pagerpos: 'center',
        altRows: true,
        //toppager: true,
        
        multiselect: true,
        //multikey: "ctrlKey",
            multiboxonly: true,
    
        loadComplete : function() {
          var table = this;
          setTimeout(function(){
            styleCheckbox(table);
            
            updateActionIcons(table);
            updatePagerIcons(table);
            enableTooltips(table);
          }, 0);
        },
        
        editurl: "/admin/patients/push?_csrf=#{csrftoken}",//nothing is saved
        
      });
      $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size
    
      //enable search/filter toolbar
      //jQuery(grid_selector).jqGrid('filterToolbar',{defaultSearch:true,stringResult:true})
      //jQuery(grid_selector).filterToolbar({});
    
      //switch element when editing inline
      function aceSwitch( cellvalue, options, cell ) {
        setTimeout(function(){
          $(cell) .find('input[type=checkbox]')
            .addClass('ace ace-switch ace-switch-5')
            .after('<span class="lbl"></span>');
            //- console.log("dsfdsfdsfdsf")
        }, 0);
        
        //- console.log($(cell).find('input[type=checkbox]'))
        //- unformatting
        if (cellvalue === 'active')
          return "true";
        else
          return "false";
      }
      //enable datepicker
      function pickDate( cellvalue, options, cell ) {
        setTimeout(function(){
          $(cell) .find('input[type=text]')
              .datepicker({format:'yyyy-mm-dd' , autoclose:true}); 
        }, 0);
      }
      
      //- format status
      function statusFormatter( cellvalue, options, rowObject) {
        var data = "<span class='label label-sm ",
          value = 'active';
          //- console.log(cellvalue);
        if (cellvalue === true) {
          data += "label-success ";
        } else {
          value = 'inactive';
          data += "label-grey ";
        }
        data += "arrowed arrowed-right'>" + value + "</span>";
        return data;
      }
    
      //navButtons
      jQuery(grid_selector).jqGrid('navGrid', "#grid-table_toppager",
        { 	//navbar options
          edit: true,
          editicon : 'ace-icon fa fa-pencil blue',
          add: true,
          addicon : 'ace-icon fa fa-plus-circle purple',
          del: true,
          delicon : 'ace-icon fa fa-trash-o red',
          search: true,
          searchicon : 'ace-icon fa fa-search orange',
          refresh: true,
          refreshicon : 'ace-icon fa fa-refresh green',
          view: false,
          viewicon : 'ace-icon fa fa-search-plus grey',
        },
        {
          //edit record form
          //- closeAfterEdit: true,
          width: 500,
          recreateForm: true,
          beforeShowForm : function(e) {
            var form = $(e[0]);
            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
            style_edit_form(form);
          },
          errorTextFormat: function(resp) {
            return resp.responseText;
          }
        },
        {
          //new record form
          width: 500,
          closeAfterAdd: true,
          recreateForm: true,
          viewPagerButtons: false,
          beforeShowForm : function(e) {
            var form = $(e[0]);
            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar')
            .wrapInner('<div class="widget-header" />')
            style_edit_form(form);
          },
          errorTextFormat: function(resp) {
            return resp.responseText;
          }
        },
        {
          //delete record form
          recreateForm: true,
          beforeShowForm : function(e) {
            var form = $(e[0]);
            if(form.data('styled')) return false;
            
            form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
            style_delete_form(form);
            
            form.data('styled', true);
          },
          onClick : function(e) {
            //alert(1);
          }
        },
        {
          //search form
          recreateForm: true,
          afterShowSearch: function(e){
            var form = $(e[0]);
            form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
            style_search_form(form);
          },
          afterRedraw: function(){
            style_search_filters($(this));
          }
          ,
          multipleSearch: true,
          /**
          multipleGroup:true,
          showQuery: true
          */
        },
        {
          //view record form
          width: 400,
          recreateForm: true,
          beforeShowForm: function(e){
            console.log(e)
            var form = $(e[0]);
            form.closest('.ui-jqdialog').find('.ui-jqdialog-title').wrap('<div class="widget-header" />')
          }
        }
      )
    
    
      
      function style_edit_form(form) {
        //enable datepicker on "sdate" field and switches for "stock" field
        form.find('input[name=sdate]').datepicker({format:'yyyy-mm-dd' , autoclose:true})
        
        form.find('input[name=active]').addClass('ace ace-switch ace-switch-5').after('<span class="lbl"></span>');
               //don't wrap inside a label element, the checkbox value won't be submitted (POST'ed)
              //.addClass('ace ace-switch ace-switch-5').wrap('<label class="inline" />').after('<span class="lbl"></span>');
    
            
        //update buttons classes
        var buttons = form.next().find('.EditButton .fm-button');
        buttons.addClass('btn btn-sm').find('[class*="-icon"]').hide();//ui-icon, s-icon
        buttons.eq(0).addClass('btn-primary').prepend('<i class="ace-icon fa fa-check"></i>');
        buttons.eq(1).prepend('<i class="ace-icon fa fa-times"></i>')
        
        buttons = form.next().find('.navButton a');
        buttons.find('.ui-icon').hide();
        buttons.eq(0).append('<i class="ace-icon fa fa-chevron-left"></i>');
        buttons.eq(1).append('<i class="ace-icon fa fa-chevron-right"></i>');		
      }
    
      function style_delete_form(form) {
        var buttons = form.next().find('.EditButton .fm-button');
        buttons.addClass('btn btn-sm btn-white btn-round').find('[class*="-icon"]').hide();//ui-icon, s-icon
        buttons.eq(0).addClass('btn-danger').prepend('<i class="ace-icon fa fa-trash-o"></i>');
        buttons.eq(1).addClass('btn-default').prepend('<i class="ace-icon fa fa-times"></i>')
      }
      
      function style_search_filters(form) {
        form.find('.delete-rule').val('X');
        form.find('.add-rule').addClass('btn btn-xs btn-primary');
        form.find('.add-group').addClass('btn btn-xs btn-success');
        form.find('.delete-group').addClass('btn btn-xs btn-danger');
      }
      function style_search_form(form) {
        var dialog = form.closest('.ui-jqdialog');
        var buttons = dialog.find('.EditTable')
        buttons.find('.EditButton a[id*="_reset"]').addClass('btn btn-sm btn-info').find('.ui-icon').attr('class', 'ace-icon fa fa-retweet');
        buttons.find('.EditButton a[id*="_query"]').addClass('btn btn-sm btn-inverse').find('.ui-icon').attr('class', 'ace-icon fa fa-comment-o');
        buttons.find('.EditButton a[id*="_search"]').addClass('btn btn-sm btn-purple').find('.ui-icon').attr('class', 'ace-icon fa fa-search');
      }
      
      function beforeDeleteCallback(e) {
        var form = $(e[0]);
        if(form.data('styled')) return false;
        
        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
        style_delete_form(form);
        
        form.data('styled', true);
      }
      
      function beforeEditCallback(e) {
        var form = $(e[0]);
        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
        style_edit_form(form);
      }
    
    
    
      //it causes some flicker when reloading or navigating grid
      //it may be possible to have some custom formatter to do this as the grid is being created to prevent this
      //or go back to default browser checkbox styles for the grid
      function styleCheckbox(table) {
      /**
        $(table).find('input:checkbox').addClass('ace')
        .wrap('<label />')
        .after('<span class="lbl align-top" />')
    
    
        $('.ui-jqgrid-labels th[id*="_cb"]:first-child')
        .find('input.cbox[type=checkbox]').addClass('ace')
        .wrap('<label />').after('<span class="lbl align-top" />');
      */
      }
      
    
      //unlike navButtons icons, action icons in rows seem to be hard-coded
      //you can change them like this in here if you want
      function updateActionIcons(table) {
        /**
        var replacement = 
        {
          'ui-ace-icon fa fa-pencil' : 'ace-icon fa fa-pencil blue',
          'ui-ace-icon fa fa-trash-o' : 'ace-icon fa fa-trash-o red',
          'ui-icon-disk' : 'ace-icon fa fa-check green',
          'ui-icon-cancel' : 'ace-icon fa fa-times red'
        };
        $(table).find('.ui-pg-div span.ui-icon').each(function(){
          var icon = $(this);
          var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
          if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
        })
        */
      }
      
      //replace icons with FontAwesome icons like above
      function updatePagerIcons(table) {
        var replacement = 
        {
          'ui-icon-seek-first' : 'ace-icon fa fa-angle-double-left bigger-140',
          'ui-icon-seek-prev' : 'ace-icon fa fa-angle-left bigger-140',
          'ui-icon-seek-next' : 'ace-icon fa fa-angle-right bigger-140',
          'ui-icon-seek-end' : 'ace-icon fa fa-angle-double-right bigger-140'
        };
        $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function(){
          var icon = $(this);
          var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
          
          if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
        })
      }
    
      function enableTooltips(table) {
        $('.navtable .ui-pg-button').tooltip({container:'body'});
        $(table).find('.ui-pg-div').tooltip({container:'body'});
      }
    
      //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');
    
      $(document).one('ajaxloadstart.page', function(e) {
        $(grid_selector).jqGrid('GridUnload');
        $('.ui-jqdialog').remove();
      });
    });
    
    
block content
  .alert.alert-block.alert-warning.center
    |A randomly generated Username and Password is emailed to the users' on creation and edit. 
  table(id='grid-table')
  //- div(id='grid-pager')
    
