// var User = require('../models/user');
// var newUser = User();
//
// newUser.username = 'vch';
// newUser.password = newUser.generateHash('pass');
// newUser.name.first = '';
// newUser.name.last = '';
// newUser.email = 'vch@mailinator.com';
// newUser.groups.push('Hospital');
// // newUser.doctors.push({name: 'Mann James', id: '55243ce5b0ef3dcf69c0a589', hospital: 'Vom Christian Hospital, Jos'});
// newUser.hospital = '55243b78a8d7119965a6887f';
// // newUser.doctors.push({name: 'Denise Mappr', id: '55243fc81f0b9aef71b0d2d8', hospital: 'Jos University Teaching Hospital, Jos'});
// newUser.save(function (err, user) {
//   if (err) return console.error(err.red);
//   else return console.log('saved newUser'.green);
// });

// var Hospital = require('../models/hospital');
// var hosp = Hospital();
//
// hosp.name = "Jos University Teaching Hospital, Jos";
// hosp.address = "Lamingo, Jos-East, Plateau State, Nigeria.";
// hosp.save(function(err, hosp) {
//   if (err) return console.log('error creating hospital.'.red);
//   else return console.log('created new hospital: '.green);
// })


.col-md-7.col-centered
  div(style='position: absolute; bottom: 5px; right: 15px; width: 250px; height: 190px')
    //- video(width='100%')
    video(width='100%', id='remoteVideo', autoplay)
  //- video(width='100%')
  video(width='100%', id='localVideo', autoplay)
//- video(id='localVideo', autoplay)
//- video(id='remoteVideo', autoplay)
//-
div
button(id='startButton') start
button(id='callButton') call
button(id='hangupButton') Hang Up


//javascript for video page
navigator.getUserMedia = navigator.getUserMedia ||
  navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
//- var constraints = {video: true, audio: true};
//-
//- function successCallback(localMediaStream) {
//-   window.stream = localMediaStream;
//-   var video =document.querySelector("video");
//-   video.src = window.URL.createObjectURL(localMediaStream);
//-   video.play();
//- }
//-
//- function errorCallback(error) {
//-   console.log("navigator.getUserMedia error: ", error);
//- }
//-
//- navigator.getUserMedia(constraints, successCallback, errorCallback);

var localStream, localPeerConnection, remotePeerConnection;

var localVideo = document.getElementById("localVideo");
var remoteVideo = document.getElementById("remoteVideo");

var startButton = document.getElementById("startButton");
var callButton = document.getElementById("callButton");
var hangupButton = document.getElementById("hangupButton");
startButton.disabled = false;
callButton.disabled = true;
hangupButton.disabled = true;
startButton.onclick = start;
callButton.onclick = call;
hangupButton.onclick = hangup;

function trace(text) {
  console.log((performance.now() / 1000).toFixed(3) + ": " + text);
}

function gotStream(stream){
  trace("Received local stream");
  localVideo.src = URL.createObjectURL(stream);
  localStream = stream;
  callButton.disabled = false;
}

function start() {
  trace("Requesting local stream");
  startButton.disabled = true;
  navigator.getUserMedia({audio:true, video:true}, gotStream,
    function(error) {
      trace("getUserMedia error: ", error);
    });
}

function call() {
  callButton.disabled = true;
  hangupButton.disabled = false;
  trace("Starting call");

  if (localStream.getVideoTracks().length > 0) {
    trace('Using video device: ' + localStream.getVideoTracks()[0].label);
  }
  if (localStream.getAudioTracks().length > 0) {
    trace('Using audio device: ' + localStream.getAudioTracks()[0].label);
  }

  var servers = null;

  localPeerConnection = new RTCPeerConnection(servers);
  trace("Created local peer connection object localPeerConnection");
  localPeerConnection.onicecandidate = gotLocalIceCandidate;

  remotePeerConnection = new RTCPeerConnection(servers);
  trace("Created remote peer connection object remotePeerConnection");
  remotePeerConnection.onicecandidate = gotRemoteIceCandidate;
  remotePeerConnection.onaddstream = gotRemoteStream;

  localPeerConnection.addStream(localStream);
  trace("Added localStream to localPeerConnection");
  localPeerConnection.createOffer(gotLocalDescription,handleError);
}

function gotLocalDescription(description){
  localPeerConnection.setLocalDescription(description);
  trace("Offer from localPeerConnection: \n" + description.sdp);
  remotePeerConnection.setRemoteDescription(description);
  remotePeerConnection.createAnswer(gotRemoteDescription,handleError);
}

function gotRemoteDescription(description){
  remotePeerConnection.setLocalDescription(description);
  trace("Answer from remotePeerConnection: \n" + description.sdp);
  localPeerConnection.setRemoteDescription(description);
}

function hangup() {
  trace("Ending call");
  localPeerConnection.close();
  remotePeerConnection.close();
  localPeerConnection = null;
  remotePeerConnection = null;
  hangupButton.disabled = true;
  callButton.disabled = false;
}

function gotRemoteStream(event){
  remoteVideo.src = URL.createObjectURL(event.stream);
  trace("Received remote stream");
}

function gotLocalIceCandidate(event){
  if (event.candidate) {
    remotePeerConnection.addIceCandidate(new RTCIceCandidate(event.candidate));
    trace("Local ICE candidate: \n" + event.candidate.candidate);
  }
}

function gotRemoteIceCandidate(event){
  if (event.candidate) {
    localPeerConnection.addIceCandidate(new RTCIceCandidate(event.candidate));
    trace("Remote ICE candidate: \n " + event.candidate.candidate);
  }
}

function handleError(){}
